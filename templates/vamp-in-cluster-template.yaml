apiVersion: v1
kind: Namespace
metadata:
  name: vamp-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vamp-sa-cluster-admin-binding
subjects:
- kind: User
  name: system:serviceaccount:vamp-system:default
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: vamp2imagepull
  namespace: vamp-system
type: kubernetes.io/dockercfg
data:
   .dockercfg: eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsiYXV0aCI6ImRtRnRjREp3ZFd4c09uWmhiWEF5Y0hWc2JFWnNkWGc9In19
---
kind: Service
apiVersion: v1
metadata:
 name: vamp-hazelcast
 namespace: vamp-system
spec:
 selector:
   app: vamp
 ports:
 - protocol: TCP
   port: 5701
   targetPort: 5701
---
apiVersion: v1
kind: Service
metadata:
 name: vamp-mongodb
 namespace: vamp-system
spec:
 clusterIP: None
 selector:
   app: vamp-mongodb
 ports:
 - port: 27017
   targetPort: 27017
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: vamp-system
  name: mongo
spec:
  serviceName: vamp-mongodb
  replicas: 3
  template:
    metadata:
      labels:
        app: vamp-mongodb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app=vamp-mongodb"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "vamp-mongodb"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "standard"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: vamprootpassword
  namespace: vamp-system
type: Opaque
data:
  password: VAMP_ROOT_PASSWORD
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: vamp
    deployment: vamp
  name: vamp
  namespace: vamp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vamp
      deployment: vamp
  template:
    metadata:
      labels:
        app: vamp
        deployment: vamp
    spec:
      containers:
      - env:
        - name: MODE
          value: "IN_CLUSTER"
        - name: ROOT_PASSWORD
          valueFrom:
             secretKeyRef:
                name: vamprootpassword
                key: password
        image: magneticio/vamp2:0.4.0
        imagePullPolicy: IfNotPresent
        name: vamp
        ports:
        - containerPort: 8888
          protocol: TCP
        - containerPort: 5701
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: vamp2imagepull
---
kind: Service
apiVersion: v1
metadata:
 name: vamp
 namespace: vamp-system
spec:
 selector:
   app: vamp
 ports:
 - protocol: TCP
   port: 8888
   targetPort: 8888
 type: LoadBalancer
